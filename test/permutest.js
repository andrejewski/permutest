
var assert = require('assert');
var permutest = require('../');

describe('permutest', function() {
  var permutations = permutest._permutations;

  describe('permutest', function() {
    it('should run each test with the values from the permuations in order', function() {
      var sets = [
        [1, 2],
        [5, 6, 7]
      ];
      var expectedOrder = permutations(sets);
      var actualOrder = [];
      permutest(function(set) {
        var a = set(sets[0]);
        var b = set(sets[1]);
        actualOrder.push([a, b]);
      });
      assert.deepEqual(expectedOrder, actualOrder);
    });
  });

  describe('permutations', function() {
    var p = permutations;

    it('should for a single set, return each value in an array', function() {
      var sets = [[1, 2, 3, 4]];
      var vals = [[1], [2], [3], [4]];
      assert.deepEqual(p(sets), vals);
    });

    it('should return all permutations in order', function() {
      var sets = [
        [1, 2],
        [5, 6, 7]
      ];
      var vals = [
        [1, 5], [1, 6], [1, 7], [2, 5], [2, 6], [2, 7]
      ];
      assert.deepEqual(p(sets), vals);
    });

    it('should handle even crazy examples', function() {
      var sets = [
        [1, 2, 3],
        [10, 20, 30, 40],
        [100, 200, 300, 400, 500],
        [1000, 2000]
      ];
      var vals = [
        [1,10,100,1000],
        [1,10,100,2000],
        [1,10,200,1000],
        [1,10,200,2000],
        [1,10,300,1000],
        [1,10,300,2000],
        [1,10,400,1000],
        [1,10,400,2000],
        [1,10,500,1000],
        [1,10,500,2000],
        [1,20,100,1000],
        [1,20,100,2000],
        [1,20,200,1000],
        [1,20,200,2000],
        [1,20,300,1000],
        [1,20,300,2000],
        [1,20,400,1000],
        [1,20,400,2000],
        [1,20,500,1000],
        [1,20,500,2000],
        [1,30,100,1000],
        [1,30,100,2000],
        [1,30,200,1000],
        [1,30,200,2000],
        [1,30,300,1000],
        [1,30,300,2000],
        [1,30,400,1000],
        [1,30,400,2000],
        [1,30,500,1000],
        [1,30,500,2000],
        [1,40,100,1000],
        [1,40,100,2000],
        [1,40,200,1000],
        [1,40,200,2000],
        [1,40,300,1000],
        [1,40,300,2000],
        [1,40,400,1000],
        [1,40,400,2000],
        [1,40,500,1000],
        [1,40,500,2000],
        [2,10,100,1000],
        [2,10,100,2000],
        [2,10,200,1000],
        [2,10,200,2000],
        [2,10,300,1000],
        [2,10,300,2000],
        [2,10,400,1000],
        [2,10,400,2000],
        [2,10,500,1000],
        [2,10,500,2000],
        [2,20,100,1000],
        [2,20,100,2000],
        [2,20,200,1000],
        [2,20,200,2000],
        [2,20,300,1000],
        [2,20,300,2000],
        [2,20,400,1000],
        [2,20,400,2000],
        [2,20,500,1000],
        [2,20,500,2000],
        [2,30,100,1000],
        [2,30,100,2000],
        [2,30,200,1000],
        [2,30,200,2000],
        [2,30,300,1000],
        [2,30,300,2000],
        [2,30,400,1000],
        [2,30,400,2000],
        [2,30,500,1000],
        [2,30,500,2000],
        [2,40,100,1000],
        [2,40,100,2000],
        [2,40,200,1000],
        [2,40,200,2000],
        [2,40,300,1000],
        [2,40,300,2000],
        [2,40,400,1000],
        [2,40,400,2000],
        [2,40,500,1000],
        [2,40,500,2000],
        [3,10,100,1000],
        [3,10,100,2000],
        [3,10,200,1000],
        [3,10,200,2000],
        [3,10,300,1000],
        [3,10,300,2000],
        [3,10,400,1000],
        [3,10,400,2000],
        [3,10,500,1000],
        [3,10,500,2000],
        [3,20,100,1000],
        [3,20,100,2000],
        [3,20,200,1000],
        [3,20,200,2000],
        [3,20,300,1000],
        [3,20,300,2000],
        [3,20,400,1000],
        [3,20,400,2000],
        [3,20,500,1000],
        [3,20,500,2000],
        [3,30,100,1000],
        [3,30,100,2000],
        [3,30,200,1000],
        [3,30,200,2000],
        [3,30,300,1000],
        [3,30,300,2000],
        [3,30,400,1000],
        [3,30,400,2000],
        [3,30,500,1000],
        [3,30,500,2000],
        [3,40,100,1000],
        [3,40,100,2000],
        [3,40,200,1000],
        [3,40,200,2000],
        [3,40,300,1000],
        [3,40,300,2000],
        [3,40,400,1000],
        [3,40,400,2000],
        [3,40,500,1000],
        [3,40,500,2000]
      ];
      assert.deepEqual(p(sets), vals);
    });
  });

});

